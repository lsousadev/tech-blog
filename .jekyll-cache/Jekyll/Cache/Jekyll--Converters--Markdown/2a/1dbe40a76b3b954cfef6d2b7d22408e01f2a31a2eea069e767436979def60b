I"ÅE<!--üî¥ üü† ‚ö´ ‚ö™ üü£ üü¢ üü° üîµ-->

<h2 id="compute-and-networking">Compute and Networking</h2>

<h3 id="amazon-ec2-elastic-compute-cloud">Amazon EC2 (Elastic Compute Cloud)</h3>

<ul>
  <li>Secure, resizable compute capacity in the cloud. It is designed to make web-scale computing easier for developers.</li>
  <li>It offers the broadest choice of processor, storage, networking, OS, and purchase model.</li>
  <li>Pricing:
    <ul>
      <li>$ Spot Instances.</li>
      <li>$$ Savings Plan.</li>
      <li>$$$ Reserved Instances.</li>
      <li>$$$$ On-Demand.</li>
      <li>$$$$$ Dedicated Host.</li>
    </ul>
  </li>
</ul>

<h3 id="elb-elastic-load-balancer">ELB (Elastic Load Balancer)</h3>

<ul>
  <li>Can load balance at a regional level.</li>
  <li>Works both for client-server and frontend-backend relationships.</li>
</ul>

<h3 id="amazon-sns-simple-notification-service">Amazon SNS (Simple Notification Service)</h3>

<ul>
  <li>Pub/sub service.</li>
  <li>Subscribers can be web servers, email addresses, AWS Lambda functions, or several other options.</li>
</ul>

<h3 id="amazon-sqs-simple-queue-service">Amazon SQS (Simple Queue Service)</h3>

<ul>
  <li>Send, store, and receive messages between software components, without losing messages or requiring other services to be available.</li>
</ul>

<h3 id="aws-lambda">AWS Lambda</h3>

<ul>
  <li>Serverless compute service.</li>
  <li>Upload code, set trigger, pay only for time used.</li>
</ul>

<h3 id="amazon-ecs-elastic-container-service">Amazon ECS (Elastic Container Service)</h3>

<ul>
  <li>Enables the running and scaling of containerized applications on AWS.</li>
</ul>

<h3 id="amazon-eks-elastic-kubernetes-service">Amazon EKS (Elastic Kubernetes Service)</h3>

<ul>
  <li>Provides the flexibility of Kubernetes with the security and resiliency of being an AWS managed service.</li>
</ul>

<h3 id="aws-fargate">AWS Fargate</h3>

<ul>
  <li>Serverless compute engine for containers (Lambda for whole containers instead of code).</li>
</ul>

<h3 id="amazon-cloudfront">Amazon CloudFront</h3>

<ul>
  <li>Amazon‚Äôs CDN (Content Delivery Network) service.</li>
  <li>Edge location: site that Amazon CloudFront uses to store cached copies of the content closer to the customers for faster delivery.</li>
</ul>

<h3 id="amazon-vpc-virtual-private-cloud">Amazon VPC (Virtual Private Cloud)</h3>

<ul>
  <li>Virtual private AWS network divided into sections called subnets.</li>
  <li>Components:
    <ul>
      <li>Internet Gateway: ‚ÄúDoor‚Äù to enter VPC. Connection between internet and VPC.</li>
      <li>Virtual Private Gateway: Gateway that allows protected internet traffic coming from approved networks only.</li>
      <li>AWS Direct Connect: Dedicated private connection between data center and VPC, instead of VPN encrypting.</li>
      <li>Private Subnet: Contains resources that should be only accessible through private network, such as customers‚Äô personal info.</li>
      <li>Network ACLs (Access Control Lists): Virtual firewall that controls in and outbound traffic at the subnet (boundary) level. They are STATELESS: they do not remember/recognize whether it is a returning or new packet, always checks them.</li>
      <li>Security Group: Virtual firewall for an EC2 instance. Default: deny all inbound, allow all outbound traffic. They are STATEFUL: they allow request responses to return regardless of rules.</li>
    </ul>
  </li>
</ul>

<h3 id="amazon-route-53">Amazon Route 53</h3>

<ul>
  <li>Amazon‚Äôs managed DNS service.</li>
  <li>A reliable way to route end users to internet applications hosted in AWS (ALIAS records to AWS resources). Useful when resources keep changing IP addresses.</li>
  <li>New domain names can be registered directly in Route 53 &amp; DNS records transferred for existing domain names managed by other domain registrars.</li>
  <li>Can load balance on DNS level.</li>
</ul>

<h2 id="storage">Storage</h2>

<h3 id="amazon-ebs-elastic-block-store">Amazon EBS (Elastic Block Store)</h3>

<ul>
  <li>Snapshots: Incremental backups (only changed data is backed up).</li>
  <li>Volume size and type can be configured before provisioning, then it gets attached to the EC2 instance.</li>
  <li>Better for huge files, since it breaks it down to blocks and saves only what changes.</li>
  <li>Better for complex read, write, change functions.</li>
  <li>It‚Äôs an AZ level resource, needs to be in the same AZ to attach to EC2 instances.</li>
  <li>Since it‚Äôs like a physical harddrive, it doesn‚Äôt automatically scale.</li>
</ul>

<h3 id="amazon-s3-simple-storage-service">Amazon S3 (Simple Storage Service)</h3>

<ul>
  <li>Web enabled (every object has a URL with access rights), regionally distributed.</li>
  <li>Serverless, lower cost.</li>
  <li>Better for complete objects and occasional changes.</li>
  <li>With object storage, each object consists of data, metadata (info about data), and a key (ID).</li>
  <li>0 bytes to 5 TB per object.</li>
  <li>Consistency:
    <ul>
      <li>New upload: Immediate (available immediately).</li>
      <li>Update/Deletion: Eventual.</li>
    </ul>
  </li>
  <li>Tiers:
    <ul>
      <li>Standard: 11 9‚Äôs of durability after 1 year.</li>
      <li>Standard-IA (Infrequent Access): Lower storage price, higher retrieval price.</li>
      <li>One Zone-IA: 1 availability zone instead of 3.</li>
      <li>Intelligent-Tiering: Automatic tiering based on usage. Small monthly monitoring and automation fee. No performance impact or operational overhead.</li>
      <li>Glacier: Lower cost, might take hours to retrieve objects.</li>
      <li>Glacier Deep: Lowest cost, retrieve objects within 12 hours.</li>
    </ul>
  </li>
  <li>Lifecycle Management: Policies that move data automatically between tiers based on how old they are.</li>
</ul>

<h3 id="amazon-efs-elastic-file-system">Amazon EFS (Elastic File System)</h3>

<ul>
  <li>Can have multiple instances reading and writing simultaneously.</li>
  <li>Linux file system.</li>
  <li>Regional resource, any EC2 instance can access it within the region.</li>
  <li>Automatically scale.</li>
</ul>

<h3 id="amazon-rds-relational-database-service">Amazon RDS (Relational Database Service)</h3>

<ul>
  <li>Amazon‚Äôs managed database.</li>
  <li>6 different engines:
    <ul>
      <li>Amazon Aurora: compatible with MySQL and PostgreSQL. 6 copies at any time accross 3 AZ‚Äôs, up to 15 read replicas. Continuous backup to S3, and has point-in-time recovery.</li>
      <li>PostgreSQL.</li>
      <li>MySQL.</li>
      <li>MariaDB.</li>
      <li>Oracle Database.</li>
      <li>Microsoft SQL Server.</li>
    </ul>
  </li>
</ul>

<h3 id="dynamodb">DynamoDB</h3>

<ul>
  <li>Serverless tables that auto-scale.</li>
  <li>Millisecond response time.</li>
  <li>It‚Äôs a non-relationable database, or NoSQL (doesn‚Äôt support SQL-like queries).</li>
</ul>

<h3 id="amazon-redshift">Amazon Redshift</h3>

<ul>
  <li>Data warehousing as a service.</li>
  <li>Handles big data, historical (non-changing data) analytics as opposed to operational analysis.</li>
</ul>

<h3 id="amazon-dms-data-migration-service">Amazon DMS (Data Migration Service)</h3>

<ul>
  <li>Safely migrate data from source to target database.</li>
  <li>Source remains fully operational.</li>
  <li>Source and target don‚Äôt have to be same type.</li>
  <li>Uses are continuous replication, database consolidation, and dev/test db migration.</li>
</ul>

<h3 id="additional-db-services">Additional DB services</h3>

<ul>
  <li>Amazon DocumentDB: Supports MongoDB workloads.</li>
  <li>Amazon Neptune: graph database. Good with recommendation engines and fraud detection.</li>
  <li>Amazon QLDB (Quantum Ledger Database): Immutable ledger.</li>
  <li>Amazon Managed Blockchain: Create and manage blockchain networks with open-source frameworks.</li>
  <li>Amazon ElastiCache: Adds caching layers on top of db. Supports 2 types of data stores, Redis and Memcached.</li>
  <li>Amazon DAX (DynamoDB Accelerator): In-memory cache for DynamoDB. Milli to microseconds.</li>
</ul>

<h2 id="security">Security</h2>

<h3 id="aws-iam-identity-and-access-management">AWS IAM (Identity and Access Management)</h3>

<ul>
  <li>When an AWS account is first created, it begins with only one identity, known as the root user.</li>
  <li>Best practice is to never use root user unless absolutely necessary.</li>
  <li>MFA (Multi-Factor Authentication) is an extra layer of security, such as a second form of authentication like a random code sent to a mobile device.</li>
  <li>IAM user: Name and credential for a person/app that interacts with AWS services and resources. No permissions by default.</li>
  <li>IAM policy: Grants or denies specific permissions for specific resources and can be attached to IAM users.</li>
  <li>IAM group: Policies can be written for groups, and then users are assigned to the groups.</li>
  <li>IAM role: An identity that can be assumed to gain temporary access to permissions.</li>
</ul>

<h3 id="aws-organizations">AWS Organizations</h3>

<ul>
  <li>Central location to manage AWS accounts with consolidation billing.</li>
  <li>Hierarchical groupings (Organization Units) of accounts.</li>
  <li>SCPs (Service Control Policies): Specify maximum permission for accounts in the organization.</li>
</ul>

<h3 id="aws-artifact">AWS Artifact</h3>

<ul>
  <li>Service that provides on-demand access to AWS security and compliance reports and select online agreements.</li>
  <li>AWS Artifact Agreements: Review, accept, and manage agreements with AWS regarding the use of certain types of information throughout AWS services.</li>
  <li>AWS Artifact Reports: Provide compliance reports from third-party auditors. AWS is compliant with a variety of global, regional, and industry-specific security standards and regulations. It remains up to date with the latest reports released.</li>
</ul>

<h3 id="aws-shield">AWS Shield</h3>

<ul>
  <li>Service that protects applications against DDoS attacks.</li>
  <li>Plans:
    <ul>
      <li>Standard: Automatic, no cost. Protects from the most common, frequently occurring types of DDoS attacks.</li>
      <li>Advanced: Paid service with detailed attack diagnostics. Integrates with other AWS services such as CloudFront, Route 53, and ELB.</li>
    </ul>
  </li>
</ul>

<h3 id="aws-waf-website-application-firewall">AWS WAF (Website Application Firewall)</h3>

<ul>
  <li>Monitor and filter incoming traffic, proactive defense with machine learning.</li>
</ul>

<h3 id="aws-kms-key-management-service">AWS KMS (Key Management Service)</h3>

<ul>
  <li>Encryption operations through the use of cryptographic keys.</li>
</ul>

<h3 id="amazon-inspector">Amazon Inspector</h3>

<ul>
  <li>Automated security assessment against infrastructure.</li>
</ul>

<h3 id="amazon-guardduty">Amazon GuardDuty</h3>

<ul>
  <li>Uses integrated threat intelligence to identify threats.</li>
  <li>Runs independently from AWS services.</li>
  <li>Identifies threats by continuously monitoring the network activity and account behavior within a AWS environment.</li>
</ul>

<h2 id="monitoring-and-analytics">Monitoring and Analytics</h2>

<h3 id="amazon-cloudwatch">Amazon CloudWatch</h3>

<ul>
  <li>Monitors and manages various metrics.</li>
  <li>Configures alarm actions based on data from those metrics.</li>
  <li>Customizable dashboard feature enables access all metrics for resources from a single location.</li>
</ul>

<h3 id="aws-cloudtrail">AWS CloudTrail</h3>

<ul>
  <li>Records API calls: ID of caller, time of call, source IP address of caller, etc.</li>
  <li>Events are typically updated in CloudTrail within 15 minutes after an API call.</li>
</ul>

<h3 id="aws-trusted-advisor">AWS Trusted Advisor</h3>

<ul>
  <li>Inspects AWS environment and provides real-time recommendations in accordance with AWS best practices.</li>
  <li>5 categories: Cost Optimization, Performance, Security, Fault Tolerance, Service Limits.</li>
</ul>

<h2 id="pricing-and-support">Pricing and Support</h2>

<ul>
  <li>Pay for what is used. Pay less for reserved resources. Pay less with volume-based discounts.</li>
  <li>AWS Free Tier comes in 3 types:
    <ul>
      <li>Always Free: Lambda, DynamoDB.</li>
      <li>12 Months Free: S3 Standard, EFS.</li>
      <li>Trials: Inspector, Lightsail.</li>
    </ul>
  </li>
  <li>AWS Pricing Calculator: Explore AWS services and create an estimate for the cost of use cases on AWS.</li>
  <li>AWS Billing &amp; Cost Management dashboard: Pay AWS bills, monitor usage, and analyze and control costs.</li>
  <li>Consolidated Billing: Add up usage of multiple accounts within the Organization to qualify for volume-based discounts.</li>
  <li>AWS Budgets: Create budgets and set alarms to plan and monitor service usage, service costs, and instance reservations.</li>
  <li>AWS Cost Explorer: Visualize, understand, and manage AWS costs and usage over time. Offers graphs and filters.</li>
  <li>AWS Support tiers:
    <ul>
      <li>Basic: 24/7 Customer service, documentation, whitepapers, forums, Trusted Advisor, AWS Personal Health Dashboard.</li>
      <li>Developer: Email access to customer support (24h response time).</li>
      <li>Business: Full set of checks for Trusted Advisor, phone access to support, infrastructure event management.</li>
      <li>Enterprise: 15-min SLA for business-critical workload, TAM (Technical Account Manager).</li>
    </ul>
  </li>
  <li>TAM: Provides guidance, architectural reviews, and ongoing communication for companies to plan, deploy, and optimize applications.</li>
  <li>AWS Marketplace: Digital catalog that includes thousands of software listings from independent software vendors.</li>
</ul>

<h2 id="migration">Migration</h2>

<ul>
  <li>AWS CAF (Cloud Adoption Framework): Organizes guidance into six areas of focus, called Perspectives:
    <ul>
      <li>Business capabilities: Business, People, Governance.</li>
      <li>Technical capabilities: Platform, Security, Operations.</li>
    </ul>
  </li>
  <li>6 different strategies (R‚Äôs) for migrating applications:
    <ul>
      <li>Rehosting: Move applications ‚Äúas is‚Äù to AWS without optimization.</li>
      <li>Replatforming: Rehosting with a few optimizations, no core code change, no new dev efforts. Eg: MySQL -&gt; RDS MySQL.</li>
      <li>Repurchasing: Abandoning legacy software vendors and moving to another one or a cloud-based one.</li>
      <li>Refactoring/Re-architecting: New code, driven by business need of new features. Highest initial cost.</li>
      <li>Retaining: No need to migrate apps about to be deprecated.</li>
      <li>Retiring: A % of app portfolio usually is no longer needed, can be terminated.</li>
    </ul>
  </li>
  <li>AWS Snow Family:
    <ul>
      <li>AWS Snowcone: 2 CPUs, 4 GB of memory, 8 TB of usable storage</li>
      <li>AWS Snowball Edge:
        <ul>
          <li>Compute Optimized: 52 vCPUs, 208GiB memory, 42 TB HDD, 7.68 TB SSD.</li>
          <li>Storage Optimized: 40 vCPUs, 80GiB memory, 80 TB HDD, 1 TB SSD.</li>
        </ul>
      </li>
      <li>AWS Snowmobile: 100 PB HDD</li>
    </ul>
  </li>
</ul>

<h3 id="aws-innovation-services">AWS Innovation Services</h3>

<ul>
  <li>Amazon SageMaker: Build, train, and deploy Machine Learning models quickly.</li>
  <li>AI services:
    <ul>
      <li>Transcribe: Convert speech to text.</li>
      <li>Comprehend: Discover patterns in text.</li>
      <li>Lex: Build voice and text chatbots.</li>
      <li>Amazon A2I: Provides built-in human review workflows for common machine learning use cases.</li>
    </ul>
  </li>
</ul>

<h2 id="other-notes">Other Notes</h2>

<ul>
  <li>AWS Cloud: Pay only for what is used.</li>
  <li>Factors for selecting a Region:
    <ul>
      <li>Compliance.</li>
      <li>Latency/Proximity.</li>
      <li>Feature/Service Availability.</li>
      <li>Pricing.</li>
    </ul>
  </li>
  <li>Availability Zone: A single data center or a group of data centers within a Region.</li>
  <li>Everything in AWS is an API call. These API calls can be crafted by the customer or facilitated by AWS:
    <ul>
      <li>DIY options:
        <ul>
          <li>AWS Management Console: Browser-based. Good for learning, testing, viewing bills, etc.</li>
          <li>AWS CLI: Make API calls from own terminal (write commands).</li>
          <li>SDKs (Software Development Kits): Use a specific language to make calls (write programs).</li>
        </ul>
      </li>
      <li>Managed tools:
        <ul>
          <li>AWS Elastic Beanstalk: Provide code and config settings, and EB deploys resources necessary for Load balancing, Scaling, Monitoring, etc</li>
          <li>AWS CloudFormation: Infrastructure as Code. What is wanted without specifying how. CF will do that. Create an environment, called a CF Template, and CF does the rest.</li>
        </ul>
      </li>
    </ul>
  </li>
  <li>Five pillars of Well-Architected Framework:
    <ul>
      <li>Operational Excellence.</li>
      <li>Security.</li>
      <li>Reliability.</li>
      <li>Performance Efficiency.</li>
      <li>Cost Optimization.</li>
    </ul>
  </li>
  <li>Benefits of the AWS Cloud:
    <ul>
      <li>Trade upfront expense for variable expense.</li>
      <li>Benefit from massive economies of scale.</li>
      <li>Stop guessing capacity.</li>
      <li>Increase speed and agility.</li>
      <li>Stop spending money running and maintaining data centers.</li>
      <li>Go global in minutes.</li>
    </ul>
  </li>
  <li>AWS Shared Responsibility Model:
    <ul>
      <li>AWS: Responsible for security ‚Äúof‚Äù the cloud (Physical, Network, Hypervisor).</li>
      <li>Customer: Responsible for security ‚Äúin‚Äù the cloud (OS, Application, Data).</li>
    </ul>
  </li>
</ul>
:ET